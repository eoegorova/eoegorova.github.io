<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://example.com/post/</link>
      <atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 06 May 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://example.com/post/</link>
    </image>
    
    <item>
      <title>Моя прошлая неделя.</title>
      <link>https://example.com/post/lastweek-post/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/lastweek-post/</guid>
      <description>&lt;h2 id=&#34;статья&#34;&gt;Статья&lt;/h2&gt;
&lt;p&gt;О том, как же я провела прошлую неделю:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Начало моей недели выдалось лёгкой, и принесло мне удовольствие, потому что в понедельник утром, я перед парами своё утро провела на пробежке.После чего, я принела контрастный душ, позанималась немецким языком, а после пошла на учёбу.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Вторник и среда ничем в целом не отличалась, кроме того, что начала делать лабораторные работы по операционным системам.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;В четверг я поехала в университет на первые две пары, сдала доклад по определённому предмету.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Пятница день не из лёгких. Провела утро на пробежке, затем снова поехала быстро в университет на пару по плану с 12:00. После чего, я пообедала, и пошла на ещё три пары к 15:00
по английскому языку.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;В субботу я поехала к своей подруге делать лабораторные работы.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Воскресенье я посвятила полноценному отдыху. Я предпочла вкусный завтрак, и футбол с обеда до вечера. Перед сном я успела ещё посмотреть фильм.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>https://example.com/post/git-post/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/git-post/</guid>
      <description>&lt;h1 id=&#34;статья&#34;&gt;Статья:&lt;/h1&gt;
&lt;h2 id=&#34;git&#34;&gt;Git.&lt;/h2&gt;
&lt;p&gt;Git — распределённая система управления версиями. Проект был создан Линусом Торвальдсом для управления разработкой ядра Linux, первая версия выпущена 7 апреля 2005 года. На сегодняшний день его поддерживает Джунио Хамано.&lt;/p&gt;
&lt;p&gt;Среди проектов, использующих Git — ядро Linux, Swift, Android, Drupal, Cairo, GNU Core Utilities, Mesa, Wine, Chromium, Compiz Fusion, FlightGear, jQuery, PHP, NASM, MediaWiki, DokuWiki, Qt, ряд дистрибутивов Linux.&lt;/p&gt;
&lt;p&gt;Программа является свободной и выпущена под лицензией GNU GPL версии 2. По умолчанию используется TCP порт 9418.&lt;/p&gt;
&lt;p&gt;Разработка ядра Linux велась на проприетарной системе BitKeeper, которую автор — Ларри Маквой, сам разработчик Linux — предоставил проекту по бесплатной лицензии. Разработчики, высококлассные программисты, написали несколько утилит, и для одной Эндрю Триджелл произвёл реверс-инжиниринг формата передачи данных BitKeeper. В ответ Маквой обвинил разработчиков в нарушении соглашения и отозвал лицензию, и Торвальдс взялся за новую систему: ни одна из открытых систем не позволяла тысячам программистов кооперировать свои усилия (тот же конфликт привёл к написанию Mercurial). Идеология была проста: взять подход CVS и перевернуть с ног на голову, и заодно добавить надёжности.&lt;/p&gt;
&lt;p&gt;Начальная разработка велась меньше, чем неделю: 3 апреля 2005 года разработка началась, и уже 7 апреля код Git управлялся неготовой системой. 16 июня Linux был переведён на Git, а 25 июля Торвальдс отказался от обязанностей ведущего разработчика.&lt;/p&gt;
&lt;p&gt;Система спроектирована как набор программ, специально разработанных с учётом их использования в сценариях. Это позволяет удобно создавать специализированные системы контроля версий на базе Git или пользовательские интерфейсы. Например, Cogito является именно таким примером оболочки к репозиториям Git, а StGit использует Git для управления коллекцией исправлений (патчей).&lt;/p&gt;
&lt;p&gt;Git поддерживает быстрое разделение и слияние версий, включает инструменты для визуализации и навигации по нелинейной истории разработки. Как и Darcs, BitKeeper, Mercurial, Bazaar и Monotone, Git предоставляет каждому разработчику локальную копию всей истории разработки, изменения копируются из одного репозитория в другой.&lt;/p&gt;
&lt;p&gt;Удалённый доступ к репозиториям Git обеспечивается git-демоном, SSH- или HTTP-сервером. TCP-сервис git-daemon входит в дистрибутив Git и является наряду с SSH наиболее распространённым и надёжным методом доступа. Метод доступа по HTTP, несмотря на ряд ограничений, очень популярен в контролируемых сетях, потому что позволяет использовать существующие конфигурации сетевых фильтров.&lt;/p&gt;
&lt;p&gt;Ядро Git представляет собой набор утилит командной строки с параметрами. Все настройки хранятся в текстовых файлах конфигурации. Такая реализация делает Git легко портируемым на любую платформу и даёт возможность легко интегрировать Git в другие системы (в частности, создавать графические git-клиенты с любым желаемым интерфейсом).&lt;/p&gt;
&lt;p&gt;Репозиторий Git представляет собой каталог файловой системы, в котором находятся файлы конфигурации репозитория, файлы журналов, хранящие операции, выполняемые над репозиторием, индекс, описывающий расположение файлов, и хранилище, содержащее собственно файлы. Структура хранилища файлов не отражает реальную структуру хранящегося в репозитории файлового дерева, она ориентирована на повышение скорости выполнения операций с репозиторием. Когда ядро обрабатывает команду изменения (неважно, при локальных изменениях или при получении патча от другого узла), оно создаёт в хранилище новые файлы, соответствующие новым состояниям изменённых файлов. Существенно, что никакие операции не изменяют содержимого уже существующих в хранилище файлов.&lt;/p&gt;
&lt;p&gt;По умолчанию репозиторий хранится в подкаталоге с названием «.git» в корневом каталоге рабочей копии дерева файлов, хранящегося в репозитории. Любое файловое дерево в системе можно превратить в репозиторий git, отдав команду создания репозитория из корневого каталога этого дерева (или указав корневой каталог в параметрах программы). Репозиторий может быть импортирован с другого узла, доступного по сети. При импорте нового репозитория автоматически создаётся рабочая копия, соответствующая последнему зафиксированному состоянию импортируемого репозитория (то есть не копируются изменения в рабочей копии исходного узла, для которых на том узле не была выполнена команда commit).&lt;/p&gt;
&lt;h1 id=&#34;управление-версиями&#34;&gt;Управление версиями&lt;/h1&gt;
&lt;p&gt;Система управления версиями (также используется определение «система контроля версий», от англ. Version Control System, VCS или Revision Control System) — программное обеспечение для облегчения работы с изменяющейся информацией. Система управления версиями позволяет хранить несколько версий одного и того же документа, при необходимости возвращаться к более ранним версиям, определять, кто и когда сделал то или иное изменение, и многое другое.&lt;/p&gt;
&lt;p&gt;Такие системы наиболее широко используются при разработке программного обеспечения для хранения исходных кодов разрабатываемой программы. Однако они могут с успехом применяться и в других областях, в которых ведётся работа с большим количеством непрерывно изменяющихся электронных документов. В частности, системы управления версиями применяются в САПР, обычно в составе систем управления данными об изделии (PDM). Управление версиями используется в инструментах конфигурационного управления (Software Configuration Management Tools).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
